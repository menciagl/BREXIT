nrow(taylor_album_songs)
rm(list = ls()) # Remove old variables
library(glue)
library(dplyr)
library(tibble)
# install.packages("taylor")
library(taylor)
# just this, it is a tibble
taylor_album_songs
nrow(taylor_album_songs)
ncol(taylor_album_songs)
unique(taylor_album_songs$album_name)
taylor_album_songs$featuring
sum(taylor_album_songs$featuring == NA)
sum(!is.na(taylor_album_songs$featuring))
sum(taylor_album_songs$featuring == "NA")
sum(taylor_album_songs$featuring == "NA", na.rm = TRUE)
sum(taylor_album_songs$featuring == NA, na.rm = TRUE)
sum(taylor_album_songs$featuring == NA)
sum(taylor_album_songs$featuring == NA, na.rm = TRUE)
taylor_album_songs$featuring == NA
taylor_album_songs$featuring == TRUE
is.na(taylor_album_songs$featuring)
sum(!is.na(taylor_album_songs$featuring))
nuevo_tb <-
taylor_album_songs[, c("album_name", "album_release", "track_name",
"featuring", "duration_ms")]
nuevo_tb[order(nuevo_tb$album_release, decreasing = TRUE), ]
library(lubridate)
nuevo_tb$month <- month(nuevo_tb$album_release)
nuevo_tb$year <- year(nuevo_tb$album_release)
sum(nuevo_tb$month == 1)
sum(nuevo_tb$month == 2)
sum(nuevo_tb$month == 3)
sum(nuevo_tb$month == 4)
sum(nuevo_tb$month == 5)
sum(nuevo_tb$month == 6)
sum(nuevo_tb$month == 7)
sum(nuevo_tb$month == 8)
sum(nuevo_tb$month == 9)
sum(nuevo_tb$month == 10)
sum(nuevo_tb$month == 11)
sum(nuevo_tb$month == 12)
which.max(c(sum(nuevo_tb$month == 1), sum(nuevo_tb$month == 2),
sum(nuevo_tb$month == 3), sum(nuevo_tb$month == 4),
sum(nuevo_tb$month == 5), sum(nuevo_tb$month == 6),
sum(nuevo_tb$month == 7), sum(nuevo_tb$month == 8),
sum(nuevo_tb$month == 9), sum(nuevo_tb$month == 10),
sum(nuevo_tb$month == 11), sum(nuevo_tb$month == 12)))
mean(nuevo_tb$duration_ms / 60000)
mean(nuevo_tb$duration_ms / 60000, na.rm = TRUE)
3.9596 * 60
0.9596 * 60
405+207+175+85
405+207+175+85 + 209
405+207+175+85 + 207
1079 - 250 - 250
1079 - 250 - 250
devtools::install_github("dadosdelaplace/pollspain")
devtools::install_github("dadosdelaplace/pollspain")
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
devtools::install_github("dadosdelaplace/pollspain")
remove.packages("purrr")
remove.packages("glue")
remove.packages("curl")
remove.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("curl")
install.packages("glue")
install.packages("purrr")
devtools::install_github("dadosdelaplace/pollspain")
devtools::install_github("dadosdelaplace/pollspain", force = TRUE)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
remove.packages("curl")
install.packages("curl")
remove.packages("stringi")
install.packages("stringi")
remove.packages("cli")
install.packages("cli")
install.packages("cli")
devtools::install_github("dadosdelaplace/pollspain", force = TRUE)
pollspain::
---
title: "Task 1 (20%)"
rm(list = ls()) # Remove old variables
library(tidyverse)
library(tidyverse)
library(readxl)
library (tidyverse)
library (dplyr)
library(microbenchmark)
#| eval: true
data <- read_excel("messy_covid_data.xlsx")
#| eval: true
data <- data %>%
mutate(across(-c(1, 2), ~ ifelse(. == 0, NA, .)))
View(data)
#| eval: false
tidy_covid <-
datos |>
filter(!is.na(fecha)) |>
pivot_longer(
cols = starts_with("0-")
names_to = "rango_edad",
#| eval: false
tidy_covid <-
datos |>
filter(!is.na(fecha))
#| eval: false
tidy_covid <-
datA |>
filter(!is.na(fecha))
#| eval: false
tidy_covid <-
data |>
filter(!is.na(fecha))
